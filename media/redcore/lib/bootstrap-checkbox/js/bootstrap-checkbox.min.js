!function(e){var t=function(t,n,s){s&&(s.stopPropagation(),s.preventDefault()),this.$element=e(t),this.$newElement=null,this.button=null,this.label=null,this.labelPrepend=null,this.options=e.extend({},e.fn.checkbox.defaults,this.$element.data(),"object"==typeof n&&n),this.displayAsButton=this.options.displayAsButton,this.buttonStyle=this.options.buttonStyle,this.buttonStyleChecked=this.options.buttonStyleChecked,this.defaultState=this.options.defaultState,this.defaultEnabled=this.options.defaultEnabled,this.indeterminate=this.options.indeterminate,this.init()};t.prototype={constructor:t,init:function(e){this.$element.hide(),this.$element.attr("autocomplete","off");var t=void 0!==this.$element.attr("class")?this.$element.attr("class").split(/\s+/):"",n=this.getTemplate();this.$element.after(n),this.$newElement=this.$element.next(".bootstrap-checkbox"),this.button=this.$newElement.find("button"),this.label=this.$newElement.find("span.label-checkbox"),this.labelPrepend=this.$newElement.find("span.label-prepend-checkbox");for(var s=0;s<t.length;s++)"checkbox"!=t[s]&&this.$newElement.addClass(t[s]);this.button.addClass(this.buttonStyle),void 0!=this.$element.data("default-state")&&(this.defaultState=this.$element.data("default-state")),void 0!=this.$element.data("default-enabled")&&(this.defaultEnabled=this.$element.data("default-enabled")),void 0!=this.$element.data("display-as-button")&&(this.displayAsButton=this.$element.data("display-as-button")),void 0!=this.$element.data("indeterminate")&&(this.indeterminate=this.$element.data("indeterminate")),this.indeterminate&&this.$element.prop("indeterminate",!0),this.checkEnabled(),this.checkChecked(),this.checkTabIndex(),this.clickListener()},getTemplate:function(){var e=this.displayAsButton?" displayAsButton":"",t=this.$element.data("label")?'<span class="label-checkbox">'+this.$element.data("label")+"</span>":"",n=this.$element.data("label-prepend")?'<span class="label-prepend-checkbox">'+this.$element.data("label-prepend")+"</span>":"",s='<span class="button-checkbox bootstrap-checkbox"><button type="button" class="btn clearfix'+e+'">'+(this.$element.data("label-prepend")&&this.displayAsButton?n:"")+'<span class="icon '+this.options.checkedClass+'" style="display:none;"></span><span class="icon '+this.options.uncheckedClass+'"></span><span class="icon '+this.options.indeterminateClass+'" style="display:none;"></span>'+(this.$element.data("label")&&this.displayAsButton?t:"")+"</button></span>";return this.displayAsButton||!this.$element.data("label")&&!this.$element.data("label-prepend")||(s='<label class="checkbox bootstrap-checkbox">'+n+s+t+"</label>"),s},checkEnabled:function(){this.button.attr("disabled",this.$element.is(":disabled")),this.$newElement.toggleClass("disabled",this.$element.is(":disabled"))},checkTabIndex:function(){if(this.$element.is("[tabindex]")){var e=this.$element.attr("tabindex");this.button.attr("tabindex",e)}},checkChecked:function(){var e=/\s/g,t=".";1==this.$element.prop("indeterminate")?(this.button.find("span."+this.options.checkedClass.replace(e,t)).hide(),this.button.find("span."+this.options.uncheckedClass.replace(e,t)).hide(),this.button.find("span."+this.options.indeterminateClass.replace(e,t)).show()):(this.$element.is(":checked")?(this.button.find("span."+this.options.checkedClass.replace(e,t)).show(),this.button.find("span."+this.options.uncheckedClass.replace(e,t)).hide()):(this.button.find("span."+this.options.checkedClass.replace(e,t)).hide(),this.button.find("span."+this.options.uncheckedClass.replace(e,t)).show()),this.button.find("span."+this.options.indeterminateClass.replace(e,t)).hide()),this.$element.is(":checked")?this.buttonStyleChecked&&(this.button.removeClass(this.buttonStyle),this.button.addClass(this.buttonStyleChecked)):this.buttonStyleChecked&&(this.button.removeClass(this.buttonStyleChecked),this.button.addClass(this.buttonStyle))},clickListener:function(){var e=this;this.button.on("click",function(t){t.preventDefault(),e.$element.prop("indeterminate",!1),e.$element[0].click(),e.checkChecked()}),this.$element.on("change",function(t){e.checkChecked()}),this.$element.parents("form").on("reset",function(t){null==e.defaultState?e.$element.prop("indeterminate",!0):e.$element.prop("checked",e.defaultState),e.$element.prop("disabled",!e.defaultEnabled),e.checkEnabled(),e.checkChecked(),t.preventDefault()})},setOptions:function(e,t){void 0!=e.checked&&this.setChecked(e.checked),void 0!=e.enabled&&this.setEnabled(e.enabled),void 0!=e.indeterminate&&this.setIndeterminate(e.indeterminate)},setChecked:function(e){this.$element.prop("checked",e),this.$element.prop("indeterminate",!1),this.checkChecked()},setIndeterminate:function(e){this.$element.prop("indeterminate",e),this.checkChecked()},click:function(e){this.$element.prop("indeterminate",!1),this.$element[0].click(),this.checkChecked()},change:function(e){this.$element.change()},setEnabled:function(e){this.$element.attr("disabled",!e),this.checkEnabled()},toggleEnabled:function(e){this.$element.attr("disabled",!this.$element.is(":disabled")),this.checkEnabled()}},e.fn.checkbox=function(n,s){return this.each(function(){var i=e(this),a=i.data("checkbox"),l="object"==typeof n&&n;a?"string"==typeof n?a[n](s):a.setOptions(n,s):(i.data("checkbox",a=new t(this,l,s)),void 0!=a.options.constructorCallback&&a.options.constructorCallback(a.$element,a.button,a.label,a.labelPrepend))})},e.fn.checkbox.defaults={displayAsButton:!1,indeterminate:!1,buttonStyle:"btn-link",buttonStyleChecked:null,checkedClass:"cb-icon-check",uncheckedClass:"cb-icon-check-empty",indeterminateClass:"cb-icon-check-indeterminate",defaultState:!1,defaultEnabled:!0,constructorCallback:null}}(window.jQuery);